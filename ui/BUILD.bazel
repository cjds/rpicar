load("@npm//@bazel/typescript:index.bzl", "ts_library", "ts_devserver")
load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")


ts_library(name = "greeter", srcs = ["greeter.ts","index.tsx"], tsconfig = ":tsconfig.json",
deps = ["//ui/components/AppBar:AppBar",
        "@npm//@types/react",
        "@npm//@types/react-dom",

	])

filegroup(
    name = "app.js",
    srcs = [
        "//ui/components/AppBar",
        "greeter",
    ],
    # Change to es6_sources to get the 'prodmode' JS
    output_group = "es6_sources",
)

webpack(
    name = "bundle",
    outs = ["app.bundle.js"],
    args = [
        "$(locations //ui:app.js)",
        "--config",
        "$(location //:webpack.config.js)",
        "-o",
        # all arguments of the shell cmd
        "$@",
        "--mode",
        "development",
    ],
    data = [
        "//:webpack.config.js",
        "//ui:app.js",
        "@npm//:node_modules",
    ],
)

ts_devserver(
    name = "devserver",
    # We'll collect all the devmode JS sources from these TypeScript libraries
    deps = [":bundle", "@npm//:node_modules"],
    # This is the path we'll request from the browser, see index.html
    serving_path = "/bundle.js",
    # The devserver can serve our static files too
    static_files = ["index.html"],
)
